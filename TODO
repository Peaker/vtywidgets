* Scalability:

  * To allow for scalable widget hierarchies, I need to make sure
    getting the TermImage is O(display size) and not O(entire size). I
    need to make sure Grid is lazy about the stuff beyond the screen
    somehow -- how?

* Maybe succumb to inclusive/inclusive Haskell ranges?

* Various "make" widget funcs:

  * Move various params that the SizeRange doesn't depend on to be imgarg

* Keymap -> Eventmap

* Scroll:

  * If I make a "follow-view", I need it to be in State, which makes
    it less composable...

* Cleanups:

  * Scroll, Grid are pretty ugly

* FocusDelegator:

* Add DirectionEntry event type, and move Grid to that position

* TextEdit:

  * Keep track of diffs

* Trace entries: How to do IO to read the entries?
  * Can have the keymap export the IO action to generate the model
