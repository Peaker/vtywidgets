* Scroller:

  * Use the cursor in child widget images as the focal point

* Widget can also have an "entry" function that returns the same "k"
  that lets it move to where it was entered from?
  * Maybe replace Keymap with Eventmap and replace ModKey with
    EventKey, and have other possible events?
  * Then "direction-entry/direction-exit" could be another event the
    widget is allowed to handle
  * Then mouse events could be sent too...

* Currently, I'd need to heuristic diff on TextEdit changes to know
  what it changed... Maybe create a composable Diff that can describe
  changes accurately?

* makeWidget should Clip the subwidget images:

  Image.clip :: Monoid a => IntersectRect -> Endo (Image a)

  mempty for any out-of-intersection position, to not break the
  guarantee that nothing is outside the clip rect of the image

* Grid

  * Instead of Grid neutralizing non-current children -- they should
    do so themselves, based on HasFocus

    * This way, all widgets can implement "global" bindings that do
      whatever they want

    * No ugly clearing of the keymap and image cursor of grid children

* PotentialScroller:

  * Choose a Scroller or the widget, based on whether or not it fits
    in the given space...
